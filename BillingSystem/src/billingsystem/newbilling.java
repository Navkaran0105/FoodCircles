/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package billingsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.*;

/**
 *
 * @author GTB Student
 */
public class newbilling extends javax.swing.JInternalFrame {

    DefaultTableModel mymodel;
    static int itmno=0;
    boolean addbtn;
    /**
     * Creates new form newbilling
     */
    public newbilling() 
    {
       initComponents();
       fetchcat();
       fetchbillnum();
       jPanel1.setVisible(false);
       showdate();
       jButton5.setVisible(false); 
       
    }
    void showdate()
    {
        Date currdt = new Date();
        jLabel8.setText(currdt.toString());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Code", "Category", "SubCategory", "ItemName", "Description", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText(".........");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("CREATE BILL");
        jLabel5.setToolTipText("");

        jButton4.setText("Add Item");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Bill No.");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText(".............");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText(".................");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Customer Contact");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Choose Category");

        jLabel2.setText("Choose SubCategory");

        jLabel3.setText("Choose Item");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );

        jButton5.setText("Confirm Add Item");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Customer Name");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Bill Date");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Enter Item Code");

        jButton7.setText("Reset");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(310, 310, 310)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7))
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8)))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(13, 13, 13)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jButton7)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        setBounds(0, 0, 1227, 875);
    }// </editor-fold>//GEN-END:initComponents
     void fetchbillnum()
    {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                String q = "select * from billing order by Billnumber desc";
                PreparedStatement myst =  myconn.prepareStatement(q);
                ResultSet res = myst.executeQuery();
                if(res.next())
                {
                    int code = res.getInt("billnumber");
                    code+=1;
                    jLabel7.setText(String.valueOf(code));
                }
                else
                {
                    jLabel7.setText("1");
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedIndex()>0)
        {
           fetchsubcat();
        } 
        jLabel1.setVisible(false);
        jComboBox1.setVisible(false);
//        if(jTable1.getRowCount()!=0)
//        {
//            int  re = JOptionPane.showConfirmDialog(rootPane, "Is it a new Item?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
//            if(re==JOptionPane.YES_OPTION)
//            {
//                mymodel = (DefaultTableModel)jTable1.getModel();
//                Object myrow[] = {"","","","","","",""};
//                mymodel.addRow(myrow);
//                itmno++;
//            }
//        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
     
    if(jComboBox2.getSelectedIndex()>0)
        {
           fetchitem();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        if(jComboBox3.getSelectedIndex()>0)
        {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                
                String q = "select * from additem where itemname=? and category=? and subcategory=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                
                String iname = jComboBox3.getSelectedItem().toString();
                String iname2 = iname.substring(0, iname.indexOf(","));
                String iname3  = jComboBox1.getSelectedItem().toString();
                String iname4  = jComboBox2.getSelectedItem().toString();
                myst.setString(1, iname2);
                myst.setString(2,iname3);
                myst.setString(3,iname4);
                ResultSet res = myst.executeQuery();
                mymodel = (DefaultTableModel)jTable1.getModel();
//                mymodel.setRowCount(0);
                boolean flg = true;
                while(res.next())
                {
                    int rc  = jTable1.getRowCount();
                    for(int x=0;x<rc;x++)
                    {
                        if((iname2.equals(jTable1.getValueAt(x, 4))) && iname3.equals(jTable1.getValueAt(x, 2)) && iname4.equals(jTable1.getValueAt(x, 3)) && jTable1.getValueAt(x, 0).equals("Item " + itmno))
                        {
                            int  re = JOptionPane.showConfirmDialog(rootPane, "Are you sure to add?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                           
                            if(re==JOptionPane.YES_OPTION)
                            {
                                flg=true;
                                break;
                            }
                            else
                            {
                                flg=false;
                                break;
                            }
                        }
                    }
                    if(flg==true)
                    {
                        String itc = res.getString("itemcode");
                        String cat = res.getString("category");
                        String subcat = res.getString("subcategory");
                        String itn = res.getString("itemname");
                        String ds = res.getString("description");
                        String nm = res.getString("rate");
                        Object myrow[] = {"Item " + itmno,itc,cat,subcat,itn,ds,nm};
                        mymodel.addRow(myrow);
                    }
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
         calctotal();
        }
       
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int  re = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete whole item? Press yes for whole, No for current","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(re==JOptionPane.YES_OPTION)
        {
            String ino = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            int rc = jTable1.getRowCount();
            //JOptionPane.showMessageDialog(rootPane, rc);
            //JOptionPane.showMessageDialog(rootPane, ino);
            int lastrow=0;
            for(int x=0;x<rc;x++)
            {
        
                if(jTable1.getValueAt(x, 0).toString().equals(ino))
                {
                    mymodel.removeRow(x);
                    x--;
                    rc = jTable1.getRowCount();
                    lastrow=x;
                }
            }
            if(jTable1.getRowCount()>0)
            {
                   mymodel.removeRow(lastrow+1);
            }
            if(jTable1.getRowCount()>0)
            {
                itmno=1;
                for(int x=0;x<rc;x++)
                {
                    if(jTable1.getValueAt(x, 0).equals(""))
                    {
                        itmno++;
                    }
                    else
                    {
                        jTable1.setValueAt(("Item " + itmno), x, 0);
                    }
                }
            }
            else
            {
                itmno=0;
            }
            
        }
        else if(re==JOptionPane.NO_OPTION)
        {
           mymodel.removeRow(jTable1.getSelectedRow());
        }
        calctotal();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       mymodel.setRowCount(0);
       calctotal();
    }//GEN-LAST:event_jButton1ActionPerformed
    void calctotal()
    {
       int rows = jTable1.getRowCount();
       int total = 0;
       for(int x=0;x<rows;x++)
       {
           if(jTable1.getValueAt(x,6).toString().equals(""))
           {
                 total+=0;
           }
           else
           {
               total+=Integer.parseInt(jTable1.getValueAt(x,6).toString());
           }
       }
       jLabel4.setText(String.valueOf(total));
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        calctotal();
        Date currdt = new Date();
        SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
        String billdt = myformat.format(currdt);
        String url = "jdbc:mysql://localhost/billingdb";
        try
        {
          Connection myconn =  DriverManager.getConnection(url, "mydbuser", "123");
          try
          {
                    String q = "insert into billing values(?,?,?,?,?)";
                    PreparedStatement myst =  myconn.prepareStatement(q);
                    myst.setString(1, jLabel7.getText());
                    myst.setString(2, jTextField2.getText());
                    myst.setString(3, jTextField1.getText());
                    myst.setString(4, jLabel4.getText());
                    myst.setString(5, billdt);
                    int res = myst.executeUpdate();
                    if(res>0)
                    {
                        int rc = jTable1.getRowCount();
                        int res1=0;
                        for(int x = 0;x<rc;x++)
                        {
                            if(!jTable1.getValueAt(x, 2).toString().equalsIgnoreCase(""))
                            {
                                q = "insert into billdetails(billno,ItemNo,itemname,category,subcategory,price) values(?,?,?,?,?,?)";
                                myst =  myconn.prepareStatement(q);
                                myst.setString(1, jLabel7.getText());
                                myst.setString(2, jTable1.getValueAt(x, 0).toString());
                                myst.setString(3, jTable1.getValueAt(x, 4).toString());
                                myst.setString(4, jTable1.getValueAt(x, 2).toString());
                                myst.setString(5, jTable1.getValueAt(x, 3).toString());
                                myst.setString(6, jTable1.getValueAt(x, 6).toString());
                                res1 = myst.executeUpdate();
                            }
                        }
                        if(res1>0)
                        {
                                printbill obj = new printbill();
                                obj.billno=jLabel7.getText();
                                obj.CusName = jTextField2.getText();
                                obj.billdt = billdt;

                                MainFrame.jDesktopPane2.add(obj);
                                obj.setVisible(true);
                                itmno=0;
                                mymodel.setRowCount(0);
                                fetchbillnum();
                                jPanel1.setVisible(false);
                                JOptionPane.showMessageDialog(rootPane, "Bill generated successfully ");
                        }
                        else
                        {
                             JOptionPane.showMessageDialog(rootPane, "Bill not generated successfully ");
                        }
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(rootPane, "Bill not generated successfully ");
                    }
                    
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(rootPane, "Error in query newbilling " + e.getMessage());
          }
          finally
          {
              myconn.close();
          }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
        
       
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       itmno++;
       
       jPanel1.setVisible(true);
       jLabel1.setVisible(true);
       jComboBox1.setVisible(true);

       
       if(jTable1.getRowCount()>=1)
       {
            mymodel = (DefaultTableModel)jTable1.getModel();
            Object myrow[] = {"","","","","","",""};
            mymodel.addRow(myrow);
       }
       
       jButton4.setVisible(false);   
       jButton5.setVisible(true);   
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
          jPanel1.setVisible(false);
          jButton4.setVisible(true); 
          jButton5.setVisible(false);   
          addbtn=false;
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    String url = "jdbc:mysql://localhost/billingdb";
        try
        {
          Connection myconn =  DriverManager.getConnection(url, "mydbuser", "123");
          try
          {
                String srch = jTextField3.getText();
                String q = "select * from additem where itemcode=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1,srch);
                
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                while(myres.next())
                {
                 String icode = myres.getString("itemcode");
                 String iname = myres.getString("itemname");
                 String iprice = myres.getString("rate");
                 String isubcat = myres.getString("subcategory");
                 Object myrow[] = {"Item"+itmno,icode,iname,iprice,isubcat};
                 mymodel.addRow(myrow);
                }
                
                if(mymodel.getRowCount()==0)
                {
                    mymodel.setRowCount(0);
                    JOptionPane.showMessageDialog(rootPane, "No records available");
                    
                }
               
               
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
          }
          finally
          {
              myconn.close();
          }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        itmno=0;
    }//GEN-LAST:event_formInternalFrameActivated

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       jPanel1.setVisible(false);
          jButton4.setVisible(true); 
          jButton5.setVisible(false);   
          itmno = 0;
    }//GEN-LAST:event_jButton7ActionPerformed
    void fetchcat()
    {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                String q = "select * from addcategory";
                PreparedStatement myst =  myconn.prepareStatement(q);
                ResultSet res = myst.executeQuery();
                while(res.next())
                {
                   jComboBox1.addItem(res.getString("Category"));
                }
                if(jComboBox1.getItemCount()==1)
                {
                    jComboBox1.removeAllItems();//removes choose
                    jComboBox1.addItem("No Categories available");// add this message
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
    
    void fetchitem()
   
    {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                String q = "select * from additem where category=? and subcategory=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1, jComboBox1.getSelectedItem().toString());
                myst.setString(2, jComboBox2.getSelectedItem().toString());
                ResultSet res = myst.executeQuery();
                jComboBox3.removeAllItems();
                jComboBox3.addItem("Choose");
                while(res.next())
                {
                  jComboBox3.addItem(res.getString("itemname") + ", " + res.getString("rate"));
                }
                if(jComboBox3.getItemCount()==1)
                {
                    jComboBox3.removeAllItems();//removes choose
                    jComboBox3.addItem("No sub Categories available");// add this message
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
     void fetchsubcat()
        {
            String path = "jdbc:mysql://localhost/billingdb";
            try
            {
                Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
                try
                {
                    String q = "select * from addsubcategory where category=?";
                    PreparedStatement myst =  myconn.prepareStatement(q);
                    myst.setString(1, jComboBox1.getSelectedItem().toString());
                    ResultSet res = myst.executeQuery();
                    jComboBox2.removeAllItems();
                    jComboBox2.addItem("Choose");
                    while(res.next())
                    {
                        jComboBox2.addItem(res.getString("subCategory"));
                    }
                    if(jComboBox2.getItemCount()==1)
                    {
                        jComboBox2.removeAllItems();//removes choose
                        jComboBox2.addItem("No sub Categories available");// add this message
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                }
                finally
                {
                    myconn.close();
                }
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
            }
    }  
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
