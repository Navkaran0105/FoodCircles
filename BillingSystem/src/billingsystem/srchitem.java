/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package billingsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GTB Student
 */
public class srchitem extends javax.swing.JInternalFrame {

    /**
     * Creates new form srchitem
     */
    public srchitem() {
        initComponents();
        fetchcat();
    }
void fetchcat()
    {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                String q = "select * from addcategory";
                PreparedStatement myst =  myconn.prepareStatement(q);
                ResultSet res = myst.executeQuery();
                while(res.next())
                {
                   jComboBox1.addItem(res.getString("Category"));
                }
                if(jComboBox1.getItemCount()==1)
                {
                    jComboBox1.removeAllItems();//removes choose
                    jComboBox1.addItem("No Categories available");// add this message
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
 void fetchsubcat()
    {
        String path = "jdbc:mysql://localhost/billingdb";
        try
        {
            Connection myconn =  DriverManager.getConnection(path, "mydbuser", "123");
            try      
            {
                String q = "select * from addsubcategory where category=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1, jComboBox1.getSelectedItem().toString());
                ResultSet res = myst.executeQuery();
                jComboBox2.removeAllItems();
                jComboBox2.addItem("Choose");
                while(res.next())
                {
                   jComboBox2.addItem(res.getString("subCategory"));
                }
                if(jComboBox1.getItemCount()==1)
                {
                    jComboBox2.removeAllItems();//removes choose
                    jComboBox2.addItem("No sub Categories available");// add this message
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Price", "SubCategory"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Choose Category");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Item Name");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Choose Sub Category");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(64, 64, 64)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButton1))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        showitems();
        fetchsubcat();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String url = "jdbc:mysql://localhost/billingdb";
        try
        {
          Connection myconn =  DriverManager.getConnection(url, "mydbuser", "123");
          try
          {
                String srch = "%" + jTextField1.getText() + "%";
                String q = "select * from additem where itemname like ?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1,srch);
                
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                while(myres.next())
                {
                 String icode = myres.getString("itemcode");
                 String iname = myres.getString("itemname");
                 String iprice = myres.getString("rate");
                 String isubcat = myres.getString("subcategory");
                 Object myrow[] = {icode,iname,iprice,isubcat};
                 mymodel.addRow(myrow);
                }
                
                if(mymodel.getRowCount()==0)
                {
                    mymodel.setRowCount(0);
                    JOptionPane.showMessageDialog(rootPane, "No records available");
                    
                }
               
               
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
          }
          finally
          {
              myconn.close();
          }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedIndex()>0)
        {
           showitems2();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed
    void showitems()
    {
         String url = "jdbc:mysql://localhost/billingdb";
        try
        {
          Connection myconn =  DriverManager.getConnection(url, "mydbuser", "123");
          try
          {
                String q = "select * from additem where category=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1, jComboBox1.getSelectedItem().toString());
                
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                while(myres.next())
                {
                 String icode = myres.getString("itemcode");
                 String iname = myres.getString("itemname");
                 String iprice = myres.getString("rate");
                 String isubcat = myres.getString("subcategory");
                 Object myrow[] = {icode,iname,iprice,isubcat};
                 mymodel.addRow(myrow);
                }
                
                if(mymodel.getRowCount()==0)
                {
                    mymodel.setRowCount(0);
                    JOptionPane.showMessageDialog(rootPane, "No records available");
                    
                }
               
               
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
          }
          finally
          {
              myconn.close();
          }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
    void showitems2()
    {
         String url = "jdbc:mysql://localhost/billingdb";
        try
        {
          Connection myconn =  DriverManager.getConnection(url, "mydbuser", "123");
          try
          {
                String q = "select * from additem where subcategory=?";
                PreparedStatement myst =  myconn.prepareStatement(q);
                myst.setString(1, jComboBox2.getSelectedItem().toString());
                
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                while(myres.next())
                {
                 String icode = myres.getString("itemcode");
                 String iname = myres.getString("itemname");
                 String iprice = myres.getString("rate");
                 String isubcat = myres.getString("subcategory");
                 Object myrow[] = {icode,iname,iprice,isubcat};
                 mymodel.addRow(myrow);
                }
                
                if(mymodel.getRowCount()==0)
                {
                    mymodel.setRowCount(0);
                    JOptionPane.showMessageDialog(rootPane, "No records available");
                    
                }
               
               
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(rootPane, "Error in query of subcat " + e.getMessage());
          }
          finally
          {
              myconn.close();
          }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
